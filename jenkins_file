pipeline {
    agent any
    tools {
        maven 'maven'
        jdk 'java21'
    }

    environment {
        JAVA_HOME = 'C:\\Program Files\\Java\\jdk-21'
        PATH = "${env.JAVA_HOME}\\bin;${env.PATH}"
        
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "13.60.86.216:8081"
        NEXUS_REPOSITORY = "loginwebapp"
        NEXUS_CREDENTIAL_ID = "nexusCred"
        ARTIFACT_VERSION = "${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Ramita12345/jenkins.git'
            }
        }

        stage('Build') {
            steps {
                bat 'mvn clean install'
            }
        }

        stage('Publish to Nexus') {
            steps {
                script {
                    try {
                        def pom = readMavenPom file: 'pom.xml'
                        def filesByGlob = findFiles(glob: "target/*.${pom.packaging}")
                        echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                        def artifactPath = filesByGlob[0].path
                        def artifactExists = fileExists artifactPath
                        if (artifactExists) {
                            echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}"
                            nexusArtifactUploader(
                                nexusVersion: nexus3,
                                protocol: http,
                                nexusUrl: 13.60.86.216:808,
                                groupId: pom.groupId,
                                version: ARTIFACT_VERSION,
                                repository: loginwebapp,
                                credentialsId: nexusCred,
                                artifacts: [
                                    [
                                        artifactId: pom.artifactId,
                                        classifier: '',
                                        file: artifactPath,
                                        type: pom.packaging
                                    ]
                                ]
                            )
                        } else {
                            error "*** File: ${artifactPath}, could not be found"
                        }
                    } catch (Exception e) {
                        echo "Publish to Nexus failed: ${e}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
    }
}
